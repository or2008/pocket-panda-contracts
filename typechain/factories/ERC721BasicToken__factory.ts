/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC721BasicToken } from "../ERC721BasicToken";

export class ERC721BasicToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721BasicToken> {
    return super.deploy(overrides || {}) as Promise<ERC721BasicToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721BasicToken {
    return super.attach(address) as ERC721BasicToken;
  }
  connect(signer: Signer): ERC721BasicToken__factory {
    return super.connect(signer) as ERC721BasicToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721BasicToken {
    return new Contract(address, _abi, signerOrProvider) as ERC721BasicToken;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
      {
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        name: "_approved",
        type: "address",
      },
      {
        indexed: false,
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a12806100206000396000f3006080604052600436106100a35763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663081812fc81146100a8578063095ea7b3146100dc57806323b872dd1461010257806342842e0e1461012c5780634f558e79146101565780636352211e1461018257806370a082311461019a578063a22cb465146101cd578063b88d4fde146101f3578063e985e9c514610262575b600080fd5b3480156100b457600080fd5b506100c0600435610289565b60408051600160a060020a039092168252519081900360200190f35b3480156100e857600080fd5b50610100600160a060020a03600435166024356102a4565b005b34801561010e57600080fd5b50610100600160a060020a036004358116906024351660443561039f565b34801561013857600080fd5b50610100600160a060020a036004358116906024351660443561044e565b34801561016257600080fd5b5061016e600435610486565b604080519115158252519081900360200190f35b34801561018e57600080fd5b506100c06004356104a3565b3480156101a657600080fd5b506101bb600160a060020a03600435166104cd565b60408051918252519081900360200190f35b3480156101d957600080fd5b50610100600160a060020a03600435166024351515610500565b3480156101ff57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261010094600160a060020a03813581169560248035909216956044359536956084940191819084018382808284375094975061058f9650505050505050565b34801561026e57600080fd5b5061016e600160a060020a03600435811690602435166105ce565b600090815260016020526040902054600160a060020a031690565b60006102af826104a3565b9050600160a060020a0383811690821614156102ca57600080fd5b80600160a060020a031633600160a060020a031614806102ef57506102ef81336105ce565b15156102fa57600080fd5b600061030583610289565b600160a060020a03161415806103235750600160a060020a03831615155b1561039a57600082815260016020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03878116918217909255835186815293519093918516927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35b505050565b806103aa33826105fc565b15156103b557600080fd5b600160a060020a03841615156103ca57600080fd5b600160a060020a03831615156103df57600080fd5b6103e9848361065b565b6103f38483610709565b6103fd838361079e565b82600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b8061045933826105fc565b151561046457600080fd5b610480848484602060405190810160405280600081525061058f565b50505050565b600090815260208190526040902054600160a060020a0316151590565b600081815260208190526040812054600160a060020a03168015156104c757600080fd5b92915050565b6000600160a060020a03821615156104e457600080fd5b50600160a060020a031660009081526002602052604090205490565b33600160a060020a031682600160a060020a03161415151561052157600080fd5b600160a060020a03338116600081815260036020908152604080832094871680845294825291829020805486151560ff199091168117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a35050565b8161059a33826105fc565b15156105a557600080fd5b6105b085858561039f565b6105bc8585858561082d565b15156105c757600080fd5b5050505050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205460ff1690565b600080610608836104a3565b905080600160a060020a031684600160a060020a03161480610643575083600160a060020a031661063884610289565b600160a060020a0316145b80610653575061065381856105ce565b949350505050565b81600160a060020a031661066e826104a3565b600160a060020a03161461068157600080fd5b600081815260016020526040902054600160a060020a031615610705576000818152600160209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916905580518481529051600160a060020a038616927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35b5050565b81600160a060020a031661071c826104a3565b600160a060020a03161461072f57600080fd5b600160a060020a03821660009081526002602052604090205461075990600163ffffffff6109b616565b600160a060020a039092166000908152600260209081526040808320949094559181529081905220805473ffffffffffffffffffffffffffffffffffffffff19169055565b600081815260208190526040902054600160a060020a0316156107c057600080fd5b600081815260208181526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387169081179091558352600290915290205461080d9060016109c8565b600160a060020a0390921660009081526002602052604090209190915550565b60008061084285600160a060020a03166109de565b151561085157600191506109ad565b84600160a060020a031663f0b9e5ba8786866040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156108e95781810151838201526020016108d1565b50505050905090810190601f1680156109165780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561093757600080fd5b505af115801561094b573d6000803e3d6000fd5b505050506040513d602081101561096157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000081167ff0b9e5ba0000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b6000828211156109c257fe5b50900390565b6000828201838110156109d757fe5b9392505050565b6000903b11905600a165627a7a723058202185f5d0cbb036e69bb3be6e39f03174db1267df3a7b93b7f67c64bfad2edb120029";
